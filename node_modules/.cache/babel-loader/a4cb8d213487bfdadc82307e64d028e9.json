{"ast":null,"code":"var _jsxFileName = \"/Users/Amanda/Documents/HOMEWORK/employee_directory/employee_directory/src/components/DataBody/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport \"./DataBody.css\";\nimport DataAreaContext from \"../../utils/DataAreaContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DataBody = () => {\n  _s();\n\n  const context = useContext(DataAreaContext);\n\n  function formatDate(date) {\n    const dateArray = date.split(\"-\");\n    const year = dateArray[0];\n    const month = dateArray[1];\n    const dayArray = dateArray[2].split(\"T\");\n    const day = dayArray[0];\n    const formattedDate = [month, day, year].join(\"-\");\n    return formattedDate;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"tbody\", {\n    children: context.developerState.filteredUsers[0] !== undefined && context.developerState.filteredUsers[0].name !== undefined ? context.developerState.filteredUsers.map(({\n      login,\n      name,\n      picture,\n      phone,\n      email,\n      dob\n    }) => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          \"data-th\": \"Image\",\n          className: \"align-middle\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: picture.medium,\n            alt: \"profile image for \" + name.first + \" \" + name.last,\n            className: \"img-responsive\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          \"data-th\": \"Name\",\n          className: \"name-cell align-middle\",\n          children: [name.first, \" \", name.last]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          \"data-th\": \"Phone\",\n          className: \"align-middle\",\n          children: phone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          \"data-th\": \"Email\",\n          className: \"align-middle\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"mailto:\" + email,\n            target: \"__blank\",\n            children: email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          \"data-th\": \"DOB\",\n          className: \"align-middle\",\n          children: formatDate(dob.date)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)]\n      }, login.uuid, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 15\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DataBody, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\n_c = DataBody;\nexport default DataBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataBody\");","map":{"version":3,"sources":["/Users/Amanda/Documents/HOMEWORK/employee_directory/employee_directory/src/components/DataBody/index.js"],"names":["React","useContext","DataAreaContext","DataBody","context","formatDate","date","dateArray","split","year","month","dayArray","day","formattedDate","join","developerState","filteredUsers","undefined","name","map","login","picture","phone","email","dob","medium","first","last","uuid"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAO,gBAAP;AACA,OAAOC,eAAP,MAA4B,6BAA5B;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAMC,OAAO,GAAGH,UAAU,CAACC,eAAD,CAA1B;;AAEA,WAASG,UAAT,CAAoBC,IAApB,EAAyB;AACrB,UAAMC,SAAS,GAAGD,IAAI,CAACE,KAAL,CAAW,GAAX,CAAlB;AACA,UAAMC,IAAI,GAAGF,SAAS,CAAC,CAAD,CAAtB;AACA,UAAMG,KAAK,GAAGH,SAAS,CAAC,CAAD,CAAvB;AACA,UAAMI,QAAQ,GAAGJ,SAAS,CAAC,CAAD,CAAT,CAAaC,KAAb,CAAmB,GAAnB,CAAjB;AACA,UAAMI,GAAG,GAAGD,QAAQ,CAAC,CAAD,CAApB;AACA,UAAME,aAAa,GAAE,CAACH,KAAD,EAAQE,GAAR,EAAaH,IAAb,EAAmBK,IAAnB,CAAwB,GAAxB,CAArB;AACA,WAAOD,aAAP;AACH;;AACD,sBACI;AAAA,cACCT,OAAO,CAACW,cAAR,CAAuBC,aAAvB,CAAqC,CAArC,MAA4CC,SAA5C,IAAyDb,OAAO,CAACW,cAAR,CAAuBC,aAAvB,CAAqC,CAArC,EAAwCE,IAAxC,KAAiDD,SAA1G,GACCb,OAAO,CAACW,cAAR,CAAuBC,aAAvB,CAAqCG,GAArC,CAAyC,CAAC;AAAEC,MAAAA,KAAF;AAASF,MAAAA,IAAT;AAAeG,MAAAA,OAAf;AAAwBC,MAAAA,KAAxB;AAA+BC,MAAAA,KAA/B;AAAsCC,MAAAA;AAAtC,KAAD,KAAiD;AACxF,0BACE;AAAA,gCACE;AAAI,qBAAQ,OAAZ;AAAoB,UAAA,SAAS,EAAC,cAA9B;AAAA,iCACE;AACE,YAAA,GAAG,EAAEH,OAAO,CAACI,MADf;AAEE,YAAA,GAAG,EAAE,uBAAuBP,IAAI,CAACQ,KAA5B,GAAoC,GAApC,GAA0CR,IAAI,CAACS,IAFtD;AAGE,YAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAI,qBAAQ,MAAZ;AAAmB,UAAA,SAAS,EAAC,wBAA7B;AAAA,qBACGT,IAAI,CAACQ,KADR,OACgBR,IAAI,CAACS,IADrB;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,eAWE;AAAI,qBAAQ,OAAZ;AAAoB,UAAA,SAAS,EAAC,cAA9B;AAAA,oBACGL;AADH;AAAA;AAAA;AAAA;AAAA,gBAXF,eAcE;AAAI,qBAAQ,OAAZ;AAAoB,UAAA,SAAS,EAAC,cAA9B;AAAA,iCACE;AAAG,YAAA,IAAI,EAAE,YAAYC,KAArB;AAA4B,YAAA,MAAM,EAAC,SAAnC;AAAA,sBACGA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAdF,eAmBE;AAAI,qBAAQ,KAAZ;AAAkB,UAAA,SAAS,EAAC,cAA5B;AAAA,oBACGlB,UAAU,CAACmB,GAAG,CAAClB,IAAL;AADb;AAAA;AAAA;AAAA;AAAA,gBAnBF;AAAA,SAASc,KAAK,CAACQ,IAAf;AAAA;AAAA;AAAA;AAAA,cADF;AAyBD,KA1BD,CADD,gBA6BC;AA9BF;AAAA;AAAA;AAAA;AAAA,UADJ;AAmCD,CA/CH;;GAAMzB,Q;;KAAAA,Q;AAiDJ,eAAeA,QAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport \"./DataBody.css\"\nimport DataAreaContext from \"../../utils/DataAreaContext\"\n\nconst DataBody = () => {\n    const context = useContext(DataAreaContext);\n\n    function formatDate(date){\n        const dateArray = date.split(\"-\");\n        const year = dateArray[0];\n        const month = dateArray[1];\n        const dayArray = dateArray[2].split(\"T\");\n        const day = dayArray[0];\n        const formattedDate =[month, day, year].join(\"-\");\n        return formattedDate;\n    }\n    return (\n        <tbody>\n        {context.developerState.filteredUsers[0] !== undefined && context.developerState.filteredUsers[0].name !== undefined ? (\n          context.developerState.filteredUsers.map(({ login, name, picture, phone, email, dob }) => {\n            return (\n              <tr key={login.uuid}>\n                <td data-th=\"Image\" className=\"align-middle\">\n                  <img\n                    src={picture.medium}\n                    alt={\"profile image for \" + name.first + \" \" + name.last}\n                    className=\"img-responsive\"\n                  />\n                </td>\n                <td data-th=\"Name\" className=\"name-cell align-middle\">\n                  {name.first} {name.last}\n                </td>\n                <td data-th=\"Phone\" className=\"align-middle\">\n                  {phone}\n                </td>\n                <td data-th=\"Email\" className=\"align-middle\">\n                  <a href={\"mailto:\" + email} target=\"__blank\">\n                    {email}\n                  </a>\n                </td>\n                <td data-th=\"DOB\" className=\"align-middle\">\n                  {formatDate(dob.date)}\n                </td>\n              </tr>\n            );\n          })\n        ) : (\n          <></>\n        )}\n      </tbody>\n    );\n  }\n  \n  export default DataBody;\n"]},"metadata":{},"sourceType":"module"}